/*
User storage class, singleton instance
Author: Nicholas O'Sullivan
 */

package com.Services.DataTypes;
import java.util.HashMap;


public class UserStorage {
    private HashMap<String, User> userStorageMap; //map username -> User Class

    private UserStorage() {
        userStorageMap = new HashMap<>();
    }

    /*generated by IntelliJ: ensure user storage instance is created only when
     *getInstance() is called for the fist time
     */
    private static final class InstanceHolder {
        private static final UserStorage instance = new UserStorage();
    }

    public static UserStorage getInstance() {
        return InstanceHolder.instance;
    }


    /*
    Add new user, ensure no existing user w/ username exists.
    Return false if username conflict.
     */
    public boolean addNewUser(User user) {
        if (userStorageMap.containsKey(user.getUsername())) {
            return false;
        }
        else {
            userStorageMap.put(user.getUsername(), user);
            return true;
        }
    }
    /*
    Get a user by username, returns Null if user not found.
     */
    public User getUser(String username) {
        return userStorageMap.get(username);
    }


}